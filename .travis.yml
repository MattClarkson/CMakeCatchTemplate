#/*============================================================================
#
#  MYPROJECT: A software package for whatever.
#
#  Copyright (c) University College London (UCL). All rights reserved.
#
#  This software is distributed WITHOUT ANY WARRANTY; without even
#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#  PURPOSE.
#
#  See LICENSE.txt in the top level directory for details.
#
#============================================================================*/

# Inspired by: https://github.com/skvark/opencv-python
# Firstly, we want to compile the C++ library of this project on
# Linux and Mac. If you are just doing a C++ library, you can comment out
# the python specific bits. But this project is mainly intended to enable
# C++ developers to get their libraries wrapped and deployed in Python.
# So, the focus of this .travis.yml is to help C++ AND Python testing.

env:
  global:
    # Prompt
    - "PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'"

    # Default settings that may be over-ridden for various builds.
    - TEST_DEPENDS="numpy==1.11.1"
    - BDIST_PARAMS=""
    - USE_CCACHE=1
    - PLAT=x86_64
    - UNICODE_WIDTH=32

# We are doing both C++ and Python here.
language: generic

# Leaving this at trusty. Ideally we want manylinux docker images.
# https://docs.travis-ci.com/user/reference/trusty/
dist: trusty

# Required to invoke docker ourselves as per https://docs.travis-ci.com/user/docker/
sudo: required
services: docker

addons:
  apt:
    packages:
      - cmake
  homebrew:
    packages:
      - cmake
    update: true

matrix:
  fast_finish: true
  include:
    # Builds for MacOS
    - os: osx
      python: 2.7
      language: generic
      osx_image: xcode8
      env:
        - MB_PYTHON_VERSION=2.7
        - BDIST_PARAMS="-- -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.7"
    - os: osx
      python: 3.4
      language: generic
      osx_image: xcode8
      env:
        - MB_PYTHON_VERSION=3.4
        - BDIST_PARAMS="-- -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.7"
    - os: osx
      python: 3.5
      language: generic
      osx_image: xcode8
      env:
        - MB_PYTHON_VERSION=3.5
        - BDIST_PARAMS="-- -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.7"
    - os: osx
      python: 3.6
      language: generic
      osx_image: xcode8
      env:
        - MB_PYTHON_VERSION=3.6
        - BDIST_PARAMS="-- -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.7"
    - os: osx
      python: 3.7
      language: generic
      osx_image: xcode8
      env:
        - MB_PYTHON_VERSION=3.7
        - BDIST_PARAMS="-- -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.7"
        - TEST_DEPENDS=numpy==1.14.5
    # Builds for Linux
    - os: linux
      python: 2.7
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env:
        - MB_PYTHON_VERSION=2.7
        - COMPILER=g++-4.8
    - os: linux
      python: 2.7
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MB_PYTHON_VERSION=2.7
        - COMPILER=g++-5
    - os: linux
      python: 3.4
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env:
        - MB_PYTHON_VERSION=3.4
        - COMPILER=g++-4.8
    - os: linux
      python: 3.4
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MB_PYTHON_VERSION=3.4
        - COMPILER=g++-5
    - os: linux
      python: 3.5
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env:
        - MB_PYTHON_VERSION=3.5
        - COMPILER=g++-4.8
    - os: linux
      python: 3.5
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MB_PYTHON_VERSION=3.5
        - COMPILER=g++-5
    - os: linux
      python: 3.6
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env:
        - MB_PYTHON_VERSION=3.6
        - TEST_DEPENDS=numpy==1.11.3
        - COMPILER=g++-4.8
    - os: linux
      python: 3.6
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MB_PYTHON_VERSION=3.6
        - TEST_DEPENDS=numpy==1.11.3
        - COMPILER=g++-5
    - os: linux
      python: 3.7
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env:
        - MB_PYTHON_VERSION=3.7
        - TEST_DEPENDS=numpy==1.14.5
        - COMPILER=g++-4.8
    - os: linux
      python: 3.7
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MB_PYTHON_VERSION=3.7
        - TEST_DEPENDS=numpy==1.14.5
        - COMPILER=g++-5

before_install:
  # Note: Most of these were deduced while testing various combinations of VTK, PCL, OpenCV.
  # You may be able to get away with a much smaller list, depending on your actual testing requirements.
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get update; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install freeglut3; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install freeglut3-dev; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install binutils-gold; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install libglew-dev; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install mesa-common-dev; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install build-essential; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install libglew1.5-dev; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install libglm-dev; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install mesa-utils-extra; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install libgl1-mesa-dev; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -yqq install libglapi-mesa; fi
#   wget -q https://cmake.org/files/v3.6/cmake-3.6.3-Linux-x86_64.sh
#    sh cmake-3.6.3-Linux-x86_64.sh --skip-license

script:
  - echo "Working directory is:"
  - echo "$CWD"
  - echo "PATH is:"
  - echo "$PATH"
  - echo "cmake version is:"
  - cmake --version
  - mkdir build
  - cd build
  - cmake -DBUILD_SUPERBUILD:BOOL=ON -DBUILD_TESTING:BOOL=ON -DBUILD_Boost:BOOL=ON -DBUILD_Python_Boost:BOOL=ON -DBUILD_Eigen:BOOL=OFF -DBUILD_glog:BOOL=OFF -DBUILD_gflags:BOOL=OFF -DBUILD_VTK:BOOL=OFF -DBUILD_PCL:BOOL=OFF -DBUILD_OpenCV:BOOL=OFF ..
  - make
  - cd MYPROJECT-build
  - ctest .

after_success: |
  # Upload wheels to pypi if requested
  if [ -n "$TRAVIS_TAG" ]; then
    set -x
    pip install twine
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      pip install --upgrade pyOpenSSL
    fi
    twine upload --repository pypi -u NOT_SET -p NOT_SET --skip-existing dist/*
      set +x
  else
    echo "Tag not set, deployment skipped."
  fi